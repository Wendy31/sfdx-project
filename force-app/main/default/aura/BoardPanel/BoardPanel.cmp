<aura:component implements="flexipage:availableForAllPageTypes">
    <!--delcare attributes (variables)-->
    <aura:attribute
        name="modes"
        type="List"
        default="[
    {'label': 'Easy', 'value': 'easy'},
    {'label': 'Medium', 'value': 'medium'},
    {'label': 'Hard', 'value': 'hard'},
    ]"
    />

    <!--create attribute to store game mode from JS-->
    <aura:attribute name="selectedMode" type="String" />

    <!--create a card with a combobox and two buttons-->
    <lightning:card title="Word Shuffle">
        <lightning:layout horizontalAlign="center" multipleRows="true">
            <lightning:layoutItem padding="around-small">
                <lightning:combobox
                    name="gameMode"
                    label="Game Mode"
                    value="inProgress"
                    variant="label-hidden"
                    aura:id="gameMode"
                    options="{!v.modes}"
                    placeholder="Select Game Mode"
                />
            </lightning:layoutItem>
            <lightning:layoutItem padding="around-small">
                <lightning:button
                    aura:id="startNewGameButton"
                    variant="brand"
                    label="Start New Game"
                    title="Start New Game"
                    onclick="{!c.startGame}"
                />
            </lightning:layoutItem>
            <lightning:layoutItem padding="around-small">
                <lightning:button label="Reshuffle" title="Reshuffle" onclick="{!c.reshuffleBoard}" />
            </lightning:layoutItem>
            <!--If selectedMode is not empty, then call the board (child) cmp to pass on selectedMode, else don't know layoutitem-->
            <aura:if isTrue="{!(v.selectedMode != null)}">
                <lightning:layoutItem size="12">
                    <c:Board aura:id="boardComp" mode="{!v.selectedMode}"></c:Board>
                </lightning:layoutItem>
            </aura:if>
        </lightning:layout>
    </lightning:card>
</aura:component>
